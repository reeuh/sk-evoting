generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String         @id @default(uuid())
  email          String         @unique
  name           String
  hashedPassword String
  barangay       String
  city           String
  province       String?
  address        String?
  phoneNumber    String?
  birthDate      DateTime?
  idType         String?
  idFrontUrl     String?
  idBackUrl      String?
  roles          Role[]
  votes          Vote[]
  auditLogs      AuditLog[]
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt

  age            Int?
  verified       Boolean?       @default(false)
  hasVoted       Boolean?       @default(false)
  verificationStatus String?    @default("pending")
  verificationMessage String?
}

model Role {
  id          String       @id @default(uuid())
  name        String       @unique
  users       User[]
  permissions Permission[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Permission {
  id        String   @id @default(uuid())
  name      String   @unique
  roles     Role[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Candidate {
  id        String   @id @default(uuid())
  name      String
  position  String
  photo     String
  bio       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Vote {
  id          String    @id @default(uuid())
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  age         Int
  position    String
  createdAt   DateTime  @default(now())

  @@unique([userId, position])
}

model AuditLog {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  action    String
  details   String?
  createdAt DateTime @default(now())
}

model Voter {
  id    Int    @id @default(autoincrement())
  name  String
  email String @unique
  // ...other fields
}